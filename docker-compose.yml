services:
  gateway-service:
    image: gateway-service
    build:
      dockerfile: ./apps/gateway/Dockerfile
    env_file:
      - ./apps/gateway/.env.docker
    ports:
      - "${GATEWAY_SERVICE_PORT}:${GATEWAY_SERVICE_PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${GATEWAY_SERVICE_PORT}/health"]
      interval: 30s
    depends_on:
      - "members-service"
      - "authorization-service"
  authorization-service:
    image: authorization-service
    env_file:
      - ./apps/authorization/.env.docker
    build:
      dockerfile: ./apps/authorization/Dockerfile
  members-service:
    image: members-service
    env_file:
      - ./apps/members/.env.docker
    build:
      dockerfile: ./apps/members/Dockerfile
  communities-service:
    image: communities-service
    env_file:
      - ./apps/communities/.env.docker
    build:
      dockerfile: ./apps/communities/Dockerfile
  roles-service:
    image: roles-service
    env_file:
      - ./apps/roles/.env.docker
    build:
      dockerfile: ./apps/roles/Dockerfile
  db:
    image: postgres:alpine
    env_file:
      - .env
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
    networks:
      - default
networks:
  default:
    driver: bridge
    name: szikra-network